# this is a playground - not a secure or hardened set of applications
services:
  flask_app:
    container_name: flask_app
    image: evanharmon/flask_crud_api:1.0
    build: .
    ports:
      - "3000:3000"
    environment:
      # improvement: create DB_URL here since it depends on svc name
      - DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@flask_db:5432/${POSTGRES_DB}
    develop:
      watch:
        - path: ./app.py
          action: sync+restart
          target: /app
        - path: Dockerfile
          action: rebuild
    depends_on:
      # improvement: don't start the flask app before postgres is ready to accept connections
      flask_db:
        condition: service_healthy

  flask_db:
    container_name: flask_db
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      # improvement: use pg_isready
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 1s
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: {}